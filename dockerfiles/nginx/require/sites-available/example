server {
    listen  80;
    server_name wsd_project_environment_domains;

    root    /var/www/wsd_project_name/public;
    index index.php;

    #include the folder containing the vhost aliases for zend server deployment
    #include "/usr/local/zend/etc/sites.d/http/local.development.wsd_project_name.com/80/*.conf";

    #include fastcgi.conf;

    location / {
        default_type       text/html;
        try_files $uri /index.php$is_args$args; # try to serve file directly, fallback to app.php
        expires 30d;
        #auth_basic "Vous devez vous authentifier";
        #auth_basic_user_file /etc/nginx/htpasswds/htpasswd;
    }

    location = /favicon.ico {
        access_log       off;
        return   204;
    }

    location ~* \.(jpg|jpeg|png|gif|css|js|swf|flv|ico|xml)$ {
        expires 31d;
        add_header Pragma public;
        add_header Cache-Control 'public, must-revalidate, proxy-revalidate';
        tcp_nodelay off;
        tcp_nopush on;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Optimisaton, source : https://coderwall.com/p/ad9ifw

    location ~* \.(?:css|js|ico|woff|eot|svg|ttf|otf|png|gif|jpe?g) {
      access_log off;
      add_header Cache-Control public;
    }

    location ~* \.(?:css|js|woff|eot|svg|ttf|otf|png|gif|jpe?g) {
      expires max;
    }

    # missing vary header on zippable fonts
    location ~* \.(?:eot|ttf|svg)$ {
      add_header Vary Accept-Encoding;
    }

    # Gzip configuration
    gzip on;
    gzip_static on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";

    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;

    # don't gzip images, woff
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js font/ttf font/opentype application/vnd.ms-fontobject image/svg+xml;

    # Add these mime.types
    #application/x-font-ttf                ttf;
    #font/opentype                         otf;
    #application/vnd.ms-fontobject         eot;
    #font/x-woff                           woff;

    # Remove this mime.types
    #application/octet-stream eot;

    set $rootUrl "/var/www/wsd_project_name/public";

    location ~* \.(?:ico)$ {
      root $rootUrl;
      expires 30d;
      add_header Cache-Control public;
      access_log off;
    }

    # css and js are tokenized
    location ~* \.(?:css|js) {
      root $rootUrl;
      expires max;
      add_header Cache-Control public;
      access_log off;
    }

    # nginx gzip_static does not add Vary header for fonts.
    location ~* \.(?:eot|ttf|svg)$ {
      root $rootUrl;
      expires max;
      add_header Vary Accept-Encoding;
      add_header Cache-Control public;
      access_log off;
    }

    # woff fonts should not be zipped.
    location ~* \.(?:woff)$ {
      root $rootUrl;
      expires max;
      add_header Cache-Control public;
      access_log off;
    }


    # tokenized images can be cached forever
    location ~* "\.([a-z0-9]{8})\.(?:gif|png|jpe?g)$" {
      root $rootUrl;
      expires max;
      add_header Cache-Control public;
      access_log off;
    }

    # non tokenized images only cache for 1 week as they are in my context subject to change.
    location ~* \.(?:gif|png|jpe?g)$ {
      root $rootUrl;
      expires 1w;
      add_header Cache-Control public;
      access_log off;
    }

    location ~ \.php$ {
        try_files               $uri =404;
        fastcgi_pass            webstack_php_1.wsd_phpfpm.dev.local.docker:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include                 fastcgi_params;
        fastcgi_param           HTTPS off;
        fastcgi_param           APPLICATION_ENV     wsd_project_environment;
        fastcgi_param           SCRIPT_FILENAME     $document_root$fastcgi_script_name;
        fastcgi_param           SCRIPT_NAME         $fastcgi_script_name;
        fastcgi_index           index.php;

        #set                    $memcached_key      "$uri?$args";
        #memcached_pass         webstack_memcached_1.wsd_memcached.dev.local.docker:11211;
    }

    error_log /var/log/nginx/wsd_project_name_error.log;
    access_log /var/log/nginx/wsd_project_name_access.log;
}